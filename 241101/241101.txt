npx create-react-app . --template typescript

npm i styled-components
npm i @types/styled-components -D
npm i react-router-dom
npm i @types/react-router-dom -D
npm i @tanstack/react-query
npm i recoil
npm i react-hook-form

npm run start

불필요 삭제

--------------------

useContext > useReducer > Redux > Redux-thunk > Axio > React-Query > Recoil

Recoil
- 전역적으로 state 관리
- 1개의 컴포넌트 안에서 관리
- atom() : state를 전역요소로 저장 및 관리 => 키메세지

useRecoilValue() : state 값을 찾아와서 사용
useSetRecoilState () : state 값을 setting해줄 수 있는 역할
useRecoilState() : state 값을 찾아오기도 하고 찾아온 해당 값을 setting까지도 모두 할 수 있는 역할

atom()
selector() : atom 함수 안에 저장, 관리 되고 있는 state 값을 원하는 형식으로 편입, 제어 => UI 전달 역할
> 식별자를 항상 달고 다닌다

get: state 값을 찾아와서 연산작업을 거쳐서 우리가 원하는 형태의 값을 최종 반환


----------------------------------------

react-beautiful-dnd(https://github.com/atlassian/react-beautiful-dnd)

1. D&D 라이브러리 사용!
- 드래그 & 드롭을 하고자 하는 문서를 반드시 DragDropContext 감싸안아야 한다

- Droppable 이라는 백그라운드 영역이 존재

- 실제 드래그를 하고자하는 요소들은 Draggable이라는 속성을 가지고 있어야 함

npm install react-beautiful-dnd
npm install @types/react-beautiful-dnd -D

Drappable & Draggable : 모두 기본적으로 함수의 형태를 띄고 있어야 함
> 고유의 id 값을 가지고 있어야 합니다
> 자식요소로 태그를 가져갈 수 있습니다 => 함수!
> 함수 자료형태 : 매개변수 // 누군가 상호소통할 수 있는 자료 형태
> Draggable : 고유한 index 값을 부여해줘야 한다
> DragEnd : D&D이 종료가 되면 실행 기능 정의


destination: 이동하고자 하는 최종 위치에 대한 정보값을 가지고 있음(droppable Id: todo || doing || done), index)

source: 이동하고자 하는 요소들의 원래 있었던 그 위치 정보값을 가지고 있음(droppable ID: todo || doing ||done)


누군가 어디론가 이동중에 있다는 사실

----------------------------
커스터마이징하기

ui 변경
삭제기능
데이터 저장기능


-----------------------------

Recoil : 전역환경에서  state의 변수를 관리, 제어 기능
- atom
- useRecoilState
- useRecoilValue
- useSetRecoilState

React-beatutiful-dnd : 드래그 앤 드롭
- 무조건 DragDropContext 프레임 안에 잇어야 함
- Droppable
- Draggable

- Droppable & Draggable : 반드시 ID 값 이어야함
- Draggable은 key 필요
- 함수의 형태로 값을 전달해야하는 구조
- magic, snapshot이라는 매개변수를 받으려면 반드시 함수형태였어야 함

- onDragEnd

React-hook-form > useForm
- form  요소를 활용

최초에 생성된 state의 자료구조가 객체 > 배열 형태
 : 객체 내 대괄호 표기법을 활용해서 데이터 제어
 : splice를 활용한 배열 내 데이터 편집
 : 원시타입 & 참조타입 변수 => 참조타입 변수 복제 => 전개연산자 구문([...oldTodos])

타입 정의
- 스타일 컴포넌트 : props의 자료타입 => 타입 정의 중요

snapshot : 드래그 앤 드롭을 하는 순간 발생되는 액션의 형태에 따라서 Boolean값으로 반환
- UI 관리

