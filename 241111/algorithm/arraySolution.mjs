const arr = [1, 3, 5, 7];

// 위에 주어진 배열에서 숫자 5를 찾아라

// 시간 복잡도는 몇 가지의 관례적인 방법으로 측정
// 빅오메가 : 가장 최선의 경우의 수를 판단
// 빅세타 : 모든 경우의 수 가운데 평균치의 경우의 수를 판단
// 빅오 : 가장 최악의 경우의 수를 판단, 물리적인 변수가 언제나 관여할 수 있기 때문에

// 시간 복잡도 => 빅오가 얼마나 나왔나요 => 연산처리 해야하는 갯수가 많을 수록 최악의 경우의 수(빅오)를 잡는것
// 빅오 : O(n) : n이라는 변수가 증가할 수록 처리해야하는 연산작업은 비례해서 증가한다
// O(1) : n이라는 변수가 고정 상수값으로 처리가 된 상황에서는 연산작업 개수와 무관하게 일정 속도를 유지 => 가장 효율성이 좋다
// O(n^2) : O의 n 제곱이 가장 효율성이 안좋다

O(4);
