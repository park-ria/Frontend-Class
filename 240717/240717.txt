*bootstrap => 프레임워크 => 독자적인 문법 체계 및 질서 => vue.js / angluar.js

*jQuery / Slick Slider => 라이브러리
=> 공통적으로 사용하는 웹 표준 문법을 기반으로 그 위에 각자의 라이브러리의 고유한 특성을 가지고있는 문법을 더할 뿐
=> React.js


flex:grid

grid 12개의 컬럼으로 나눈다 > 10과 가까운 숫자 가운데서 최대공약수가 가장 많은 수

*Grid는 flex와 정말 중요하게 많이 사용되는 레이아웃 시스템 중 하나!!
사용빈도 : grid < flex


grid : 명확하게 행과 열이 정해진 상황에서 사용!! > 정의가 되어있지 않으면 행 ,열에 대한 정렬이 완전 깨짐

flex의 경우, 부모요소 d:f 적용하는 순간 => 자식 요소들은 flex 박스에 영향을 받음!!!
grid의 경우 , 부모요소 d:g 적용하는 순간 자식 요소들은 grid 박스에 영향을 받지 않음


grid-template-columns: 100px 1fr 1fr;
100px은 고정 1/3 비율 2/3 비율을 의미





display: grid
grid-template-columns : 열을 몇 개
grid-template-rows : 행을 몇 개
> grid : 형 몇개/ 열 몇개

grid-row-gap : 행 사이의 간격
grid-column-gap : 열 사이의 간격
> grid-gap : 행 간격 열 간격


justify-items : 이미 여러개 열을 나눠진 각 자식 요소의 아이템들의 수평 정렬 세팅
  > start / center / end /stretch

align-items : 이미 여러개 열을 나눠진 각 자식 요소의 아이템들의 수직 정렬 세팅
  > start / center / end /stretch

justify-content : 이미 여러개 열로 나눠진 각 자식요소를 하나의 컨텐츠로 인식
 > start / center / end


* 1fr / auto 공통점
=> 평소에는 거의 동일한 개념으로 사용
=> column / row를 나누고자 할 때 1/n

* 각각의 개별 아이템을 하나로 묶어서 contnent로 사용하고자 할 때, 차이점!!!
auto의 경우, 개별 아이템에 원래 적요되어있던 너비값을 식별해서 사용!!!
1fr의 경우, 개별 아이템의 너비보다 부모요소의 전체 너비 중 1/n 값을 우선 적용!!


* align-content : 각 개별 아이템들을 하나의 content로 식별해서 수직정렬을 주고자 할 때 사용
 > start / center / end


* justify-self & align-se;f : 부모가 아닌 자식요소에 적용할 수 있는 그리드 문법 => 부모 요소의 정렬보다 우선적인 적용!!!
 > start / center / end / stretch


------------------------------------------------------------------

그리드 레이아웃 시스템 정렬 기준 : 라인 카운트!
> 자식 요소 !!! 라인 카운트

열을 기준으로 병합하고자 할 때, 
grid-column-start: 열이 시작될 라인 넘버
grid-column-end: 열이 끝날 부렵의 라인 넘버
> grid-column : 시작 라인 넘버 / 종료 라인 넘버
> grid-column : 시작 라인 넘버 / span 공간수


-----------------------------------------------------------------


상업적인 서비스 웹,앱 페이지 완성

대표이사 > CTO

CTO > 프로젝트 리뉴얼 제시
 - TF팀
 - UI/UX & 마케터
 - 우리의 서비스를 기존 사용하는 사용자
 - 나이 / 성별 / 트렌드 / 취향 / SNS 등 : 수도권 2030 여성 / 직장인여성 용품 잘 나감
 - 경쟁업체 / 컬러 
 - UI/UX 기획
     1. 문제 인식 : 
          - 매출증대
          - 충성고객 확보
          - 사용자 서비스 편의 개선
     2. 벤치마킹
     3. 가설 설정 : 
          - Segment(공동체 그룹) : 기혼 VS 미혼 | 산업 카테고리 | 기혼 자녀유무
          - 우선순위 28세 / 미혼 / 사무직 여성
          - Persona(월요일 아침 기상, 몇시에 출근 / 인터넷 / 마라탕 / 요가 / 9시 / 11시 잠 => 주말 삶)
     4. 가설 검증
           - User Research
               1) Primary Research = Field Research
                    - 우리의 페르소나라고 판단되어지는 대상을 타겟으로 직접 리서치
                    - FGI 테스트(Focus Group Interview)

               2) Secondary Research = Desk Research
                    - 구글링
                    - 논문검색
                    - 기사
                      => 통계청 / 네이버 데이터랩 / 네이버 광고센터 / SKT LAB
                          * 카드회사
                          * 통신사
                          * google play 리뷰 낮은거부터 보기

               3) Journey Map
                     - 인터뷰 > 페르소나 => 목적 => 인터뷰 응한 이유 => 녹취
                     - 페르소나 => 직접 앞에서 서비스 실행 => 접속 => 로그인 / 서칭 / 결제 / 장바구니 / 튕김

UX
------------------------------------------------------

- 본격적인 UI 작업
1) UX/UI 기획자 기획
2) 웹 디자이너
    - 2d 요소 정적인 디자인 이미지 제작
3) 웹 퍼블리셔
    - 디자이너 작업물 => 웹 출력
4) 프론트엔드 개발자
    - 클릭 / 오버 / 로그인 등등 액션 => 동적인 기능 구현
    - API 화면 출력

UI
-------------------------------------------------------

5) 백엔드 개발자
    - DB 구조화 / 사용자 요청 => 응답(*효율적인 서버 구축)

코딩 > 개발 착수

UX : User Experience
UI : User Interface




