1.슬라이드
- 배열 자료구조
- 싱글타입 (*이미지 단일)
- 난이도 "하"
- 화살표 클릭, 슬라이드 교체

- 무한 슬라이드 (*화살표를 클릭, 마지막 슬라이드 => 첫번째 슬라이드)

- 자동슬라이드(*굳이 화살표를 클릭x, 알아서 슬라이드 교체)

- 페이저 탑재 슬라이드 (*페이저를 클릭 했을 때, 슬라이드 이미지가 교체 + 슬라이드가 자동으로 페이지 교체 => 페이저도 자동으로 교체, 페이저 역시 무한으로 실행)

- 멀티플타입

슬라이드
document.querySelectorAll(ul li)
> console.log -> NodeList > [li, li, li, li, li] -> 유사배열
> 배열자료 > 배열자료 안에 있는 모든 데이터는 각자 고유한 숫자 간직 = index 번호
0~4이면 4번 뒤에 다시 0번으로



라이브러리!!!
라이브러리 >js > jQuery 
animejs => https://animejs.com/
slick slider => https://kenwheeler.github.io/slick/
swiper => https://swiperjs.com/demos
gsap => https://gsap.com/
fullpage => https://alvarotrigo.com/fullPage/ko/
featherlight => https://noelboss.github.io/featherlight/


2. 마우스 이벤트
- mouseover & mouseout : 함께 세트
 > 이벤트 버블링 기능 O => 위에 있는 부모한테도 영향을 미치겠다

- mouseenter & mouseleave : 함께 세트
 > 이벤트 버블링 기능 X => 부모에게 영향을 미치지 않겠다





css3 속성!!!
CSS : Cascading Style Sheet

1) 단위 : px / rem / em / % / vw / vh
- html 문서 안에 특별한 font-size 지정하지 않은 상황이라면, 기본적인 font-size: 16px
   / 폰트 사이즈 기본 설정값 가장 큰 속성 값 => h1태그 32px;
- em : element 약자. 부모요소의 font-size를 기준으로 몇 배수의 크기를 가져가게 할 것인가 
   / 부모를 바꾸면 같이 바뀌기 때문에 많이 쓴다
- px : picxel 고정값
- rem : root element 약자. 현재 작업중인 문서 내 최상위 요소의 태그를 의미, 혹은 그에 준하는 선택자
- em은 부모와 자식관계가 복잡할수록 계산이 복잡해진다. -> 부모 요소를 감안해서 계산해야하는 수고로움이 있지만 rem은 가장 최상단에 폰트 사이즈를 정해놓기 때문에 보통 rem을 쓴다

실무 : 작업하고자하는 제품(웹페이지)
- default : 18px
- * || body => font-size : 18px
- 9px => 0.5rem / 27px => 1.5 rem

-가변그리드!!!  grid layout => 모든 크기를 %를 줘서 반응형에 대응함
- vw / vh : viewport 바라보고있는 화면의 높이만큼 width / hight
    100%는 vw, vy와 다름 => 문서 작성된 컨텐츠 높이만큼 높이 결정


2) display 속성 : none / block / inline / inline-block


3) visibility 속성 : visible / hidden / collapse

4) opacity 속성 
- 1=> 100% : 불투명
-  0=> 0% : 투명

5) margin / padding 속성
- 1개 : 상하좌우 값 동일
- 2개 : 상하 / 좌우
- 3개 : 상 / 좌우 / 하
- 4개 : 상부터 시계방향(상 우 하 좌)

6) box-sizing
- border-box : border / padding => content item width & height 포함 => 주로 이걸 쓴다
- content-box : content item에 적용한 width, height 값을 그대로 유지한채로 border / padding 적용

7) font 속성
- font-family:  "Nanum Pen Script", cursive;
- font-size: 4rem;
- font-weight: 700px;
- font-style: italic;
=> 폰트로 하나로 묶어서 쓸 수 있다. font-weight는 따로 쓴다
font: italic 4rem/5 bold, "Nanum Pen Script", cursive;
font-weight: 700;
- line-height: 현재 작성된 텍스트의 높이를 제어 목적 / 수직 정렬 = 세로 정렬 기능!!!(*단문)
    단문일 경우 부모의 height의 크기만큼 line-height를 주면  수직 정렬이 가능하지만 두줄이상은 수직 정렬이 되지 않음..



8) background 속성(240704)
- background-image : url()를 사용해서 특정 이미지를 적용하고자 할 때
    (*이미지를 여러장 사용 가능)

- background-color
- background-size
  > cover : 현재 삽입하고자 하는 이미지의 "너비"를 중심으로 삽입
  > contain : 현재 삽입하고자 하는 이미지의 "높이"를 중심으로 삽입
  > % : 현재 삽입한 이미지를 출력하고 있는 매체의 너비를 기준으로 %비율을 적용하고자 할 때

- background-position
  > 적용한 background 이미지의 위치를 어디에 둘지 결정하고 할 때

- background-attachment
  > 스크롤이 이동되더라도 해당 이미지를 특정 위치에 고정시키고 싶을 때

- background-repeat
  >기본적으로 반복적으로 보여 줌 repeat가 default임
  > no-repeat
  > 삽입된 이미지는 기본적으로 repeat 속성을 가지고 있지만, 만약 이 속성을 사용하고 싶지 않은 경우

=> background: url("") position/size attached repeat으로 한번에 작성 가능
=> background: url("./img/BackgroundFront.png") bottom/100% fixed no-repeat,
          url("./img/BackgroundBack.png") bottom/100% fixed no-repeat;


9) bord 속성
- border-width
- border-style : solid / dotted/ dashed
- border-color
=> border: 5px solid crimson;

- border-radius : 테두리를 둥그렇게 생성
=> 값 1개 : 상하좌우 모두 값을 동일
=> 값 4개 : 좌상단 / 우상단 / 우하단 / 좌하단 => 좌상단부터 시계방향
=> 반지름 값 이상 주면 원이 된다 width가 400이면 border-radius를 200을 주거나 50% 주면 원이 됨

10) position 속성 (240704)
※※※※※※※양수는 기준 안쪽으로 음수는 기준 바깥쪽으로※※※※※※※

- static(순차적인) : 기본적으로 html 문서를 통해서 tag를 사용하면 기본적으로 position 속성값이 static이라서 따로 쓸 필요 없음

- relative(상대적인) : 순차적으로 입출력된 아이템 요소들 사이에서 상대적인 포지션 위치 좌표값을 가지고 싶을 때 => 기준

- absolute(절대적인) : 기존에 작성된태그들과 다른 차원으로 넘어가기 때문에 위치 좌표값을 절대적으로 사용!!!
(*부모 요소들 중에 누군가가 relative 속성을 가지고 있다면, 해당 부모를 기준으로 절대위치 좌표값을 적용)

- fixed(고정된) : 설정한 포지션 위치값에 고정으로 붙어있는 경우 => 헤더

-sticky(달라붙는) : 스티커 => 특정 좌표값에서 스티커처럼 붙어있도록 하고자 할 때 사용 => 어느 지점부터 고정값이 됨 => 광고

- z-index : 3차원 공간에 대한 위치 정의! (x, y, z 축)
  > 크면 클수록 모니터를 기준으로 앞으로 튀어나오는 위치 좌표
  > 작으면 작을수록 모니터를 기준으로 뒤로 들어가는 위치 좌표

10) float 속성 : 예전에 참 많이 사용하던 속성 (240704)
- float : 부유하다 둥둥떠 다닌다
- 웹 뉴스 기사 컨텐츠 출력 => 좌 기사 이미지 / 우 기사 내용
> 레이아웃 정렬 이슈 => float 정렬 목적  => 구획과 상관없이 밑에 있던 애들이 같이 딸려 옴
> 요즘 레이아웃 정렬 전문 문법 => flex & grid

11) shadow 속성 (240704)
- text-shadow : 텍스트(글자)에 그림자를 부여하는 속성
- box-shadow : 아이템박스에 그림자를 부여하는 속성
(* x축으로 부터 떨어진 지점 / y축으로 부터 떨어진 지점 / 그림자 선명|흐림 / 색상)

12) gradient 속성(https://webgradients.com/ 참고) (240704)
- linear-gradient( ): 선형
- radial-gradient( ) : 원형






