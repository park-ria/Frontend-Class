Redux(React.js 직접 제공하는 hook X) : Js 앱 // 제품을 개발 => state를 관리해주는 라이브러리
> React.js에서만 사용할 수 있는게 아니다
> React.js prop 부모에서 자식으로 일반통행

> useDispatch() : 사용자가 UI를 보고 어떤 이벤트를 실행하면 실행했다라는 action 값으로 정의할 수 있도록 도와주는 React.js Hooks(함수)

> useSelector(): 사용자의 action으로 인해 발생한 state 변경값이 reducer 함수를 거쳐서 store에 저장되었을 때, store 안에 있는 해당 state의 값을 찾아오고자 할 때 사용할 수 있는 React.js Hooks


Redux(*동기처리 방식) : Redux를 비동기적인 방식으로 처리할 수 있도록 toolkit => middelware
> Redux-saga(바닐라자바스크립트)
  - 제너레이터 기반 Redux 상태관리 라이브러리 toolkit
  - 학습량이 많음, 대기업 많이 씀

> Redux-thunk
- action // reducer // middleware // store
- 영화정보 api, 장르 api


React-Redux


React-Query


----------------------------------------------------------
https://ko.redux.js.org/introduction/getting-started/
https://react-redux.js.org/introduction/getting-started

npm create vite@latest
simpletest
react
javascript + swc
index.css, app.css 삭제
main.jsx strict 지우고
app.jsx 내용 지우고 rafce


>npm install @reduxjs/toolkit
>npm install react-redux
>npm install redux
>npm i styled-components


------------------------------------------------------------

npm create vite@latest
phonebook
react
javascript + swc
index.css, app.css 삭제
main.jsx strict 지우고
app.jsx 내용 지우고 rafce

Redux 설치
>npm install @reduxjs/toolkit
>npm install redux

React-Redux 설치
>npm install react-redux

스타일드 컴포넌트 설치
>npm i styled-components
import 'bootstrap/dist/css/bootstrap.min.css';

React-bootstrap 설치
>npm install react-bootstrap bootstrap

=> npm i @reduxjs/toolkit redux react-redux styled-components react-bootstrap bootstrap로 한번에 가능

---------------------------------------------------------

Redux : 과도한 props drilling을 제어하고, 효율적인 state 관리를 위한 라이브러리
 > 동기적으로 처리하는 단점이 있음
 > 비동기적으로 처리할 수 있게끔 기존 Redux에 middleware를 추가

middleware
1. Redux-saga
2. Redux-thunk(https://github.com/reduxjs/redux-thunk) : 비동기 처리
일반적인 복수의 reducer의 처리값을 받아서 비동기적으로 처리하는 그 행위
  1) 상품정보를 가져오는 reducer
  2) 로그인정보를 가져오는 reducer
      > root-reducer(비동기처리)


event -> usedispatch -> middleware -> reducer -> store -> useSelector -> event


=================================

241010에서 무신사에 redux-thunk 적용
>npm install @reduxjs/toolkit
>npm install redux
>npm install react-redux
>npm install redux-thunk

UI 화면을 구성하는 곳에서 EVENT
사용자 처리 EVENT
외부 REST API 방식으로 Json 찾아오는 EVENT

productAction.js => 액션 객체를 반환하는 함수

combineReducers
https://lunit.gitbook.io/redux-in-korean/recipes/structuringreducers/usingcombinereducers

구글 크롬 확장프로그램 -> 크롬 웹스토어 -> Redux DevTools -> 확장프로그램 추가

구글 검색 redux devtools extension(https://www.npmjs.com/package/redux-devtools-extension)
 =>npm install --save redux-devtools-extension 설치
 => 설치가 안되면 뒤에 --force붙이기 > npm install --save redux-devtools-extension --force


